<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Mandelbrot set</title>
  </head>

  <body onload="main()">
    <canvas id="webgl" style="border: none;" width="480" height="400">
    Your browser does not support "canvas".
    </canvas>

    <script id="shader-vs" type="x-shader/x-vertex">
//
//  *** Vertex shader program
//
//  a_Position = vertex position in clip coordinates [-1,1] X [-1,1]

      attribute vec2 a_Position;
 
      void main(void) {

//  gl_Position = vertex position in clip coordinates

          gl_Position = vec4(a_Position, 0.0, 1.0);
      }
    </script>

    <script id="shader-fs" type="x-shader/x-fragment">
//
//  ### Fragment shader program
//
      #ifdef GL_ES
      #ifdef GL_FRAGMENT_PRECISION_HIGH
      precision highp float;
      #else
      precision mediump float;
      #endif
      #endif

//  cx,cy = Center of a square region R in the complex plane
//  size = Width and height of R
//  nx,ny = Viewport width and height in pixels

      uniform float cx, cy;
      uniform float size;
      uniform float nx, ny;

      void main() {
          float tx, ty, v, x, y, zns, zx, zy;
          const int kmax = 4000;
          const float PI = 3.14159265358979;

//  Map the fragment to a point p = (x,y) in R.

          x = gl_FragCoord.x * (size/nx) + cx - size/2.0;
          y = gl_FragCoord.y * (size/ny) + cy - size/2.0;
          zx = 0.0;
          zy = 0.0;

//  Iterate on z = z^2 + p until |z| >= 2 or k = kmax.

          for (int k = 0; k < kmax; k++) {
              tx = zx*zx - zy*zy;
              ty = 2.0*zx*zy;
              zx = tx + x;
              zy = ty + y;
              zns = zx*zx+zy*zy;
              if (zns >= 4.0) break;
          }

//  Clamp zns to v and map v to a luminance.

          v = min(zns, 1.0);
          gl_FragColor.r = v;
          gl_FragColor.g = 0.5*sin(3.0*PI*v) + 1.0;
          gl_FragColor.b = 1.0 - v;
          gl_FragColor.b = 0.5*cos(19.0*PI*v) + 1.0;
          gl_FragColor.a = 1.0;

      }
    </script>


    <script src="lib/webgl-utils.js"></script>
    <script src="lib/webgl-debug.js"></script>
    <script src="lib/cuon-utils.js"></script>
    <script src="lib/cuon-matrix.js"></script>
    <script src="mandelbrot.js"></script>

    <br>
    <button type="button" onclick="zoomOut()">Zoom out (<)</button>
    <button type="button" onclick="zoomIn()">Zoom in (>)</button>
    <br>
    <button type="button" onclick="setDefaults()">Restore defaults (r)</button>
    <br>
    <p>Move the center with a left mouse button press.</p>

  </body>
</html>
